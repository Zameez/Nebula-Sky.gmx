<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global.gfx=0
if shaders_are_supported()
    {
    if shader_is_compiled(glsl_gaussian_blur) &amp;&amp; shader_is_compiled(glsl_threshold)
       {
       //global.gfx = 0
       }
    }
{
surf_blur_pass = surface_create ( 800, 480 );
surf_bloom = surface_create ( 800, 480 );
//surface_resize(surf_blur_pass,800*global.scale,480*global.scale)
//surface_resize(surf_bloom,800*global.scale,480*global.scale)
application_surface_draw_enable ( false );
uscale = shader_get_uniform ( glsl_gaussian_blur, "u_Scale" );
uthresh = shader_get_uniform ( glsl_threshold, "u_Threshold" );
}

resized=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.gfx=1
{
surface_free(surf_blur_pass)
surface_free(surf_bloom)
if application_surface_is_enabled()
       {
       application_surface_enable(false);
       }
    else
       {
       application_surface_enable(true);
       }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if global.gfx=1
{
if !surface_exists(surf_blur_pass)
{
    surf_blur_pass = surface_create ( 800, 480 );
    surface_resize(surf_blur_pass,800*global.scale,480*global.scale)
}
if !surface_exists(surf_bloom)
{
    surf_bloom = surface_create ( 800, 480 );
    surface_resize(surf_bloom,800*global.scale,480*global.scale)
}
}
/*else
{
    instance_destroy()
    application_surface_draw_enable (true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//if global.gfx=1
{
shader_set ( glsl_threshold );
shader_set_uniform_f ( uthresh, 0.8 );
surface_set_target ( surf_bloom );
draw_surface ( application_surface, 0, 0 );
surface_reset_target ( );

shader_set ( glsl_gaussian_blur );
shader_set_uniform_f ( uscale, 0.012, 0.0 );
surface_set_target ( surf_blur_pass );
draw_surface ( surf_bloom, 0, 0 );
surface_reset_target ( );

surface_set_target ( surf_bloom );
shader_set_uniform_f ( uscale, 0.0, 0.012 );
draw_surface ( surf_blur_pass, 0, 0 );
surface_reset_target ( );
shader_reset ( );

draw_surface ( application_surface, 0, 0 );
draw_set_blend_mode ( bm_add );
draw_surface ( surf_bloom, 0, 0 );
draw_set_blend_mode ( bm_normal );
}
/*if resized=0
{
surface_resize(application_surface,display_get_gui_width(), display_get_gui_height())
resized=1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
