<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Startup settings
//Maximal distance from player
maxCamDistance = 192;
//Moving sensivity
camSensitivity = 0.05;
//if attacked
isAtk=0
//Shake
isShake=0
shakeStarted=0
xx=0
yy=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If attacked

if isAtk
{
    dir=global.atkDir
    force=global.atkDmg
    x=lengthdir_x(force+maxCamDistance,dir)
    x=lengthdir_y(force+maxCamDistance,dir)
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shakescreen
if isShake &amp;&amp; !shakeStarted
{
    shakeStarted=1
    xx=x
    yy=y
}
if isShake &amp;&amp; shakeStarted
{
    view_xview[0]=xx+random_range(-3,3);
    view_yview[0]=yy+random_range(-3,3);
}
if !isShake
{
    shakeStarted=0
    xx=x
    yy=y
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera moving
//Coord between cam and cursor
var cameraX = mean(obj_player_cam.x, obj_cursor.x);
var cameraY = mean(obj_player_cam.y, obj_cursor.y);

//If cursor on the right...
if (cameraX &gt; obj_player_cam.x)
{
    //Check distance
    var camMaxX = (obj_player_cam.x + maxCamDistance)
    if (cameraX &gt; camMaxX)
    {
        cameraX = camMaxX
    }
}
//Analogue left...
else
{
    //The same, check distance
    var camMaxX = (obj_player_cam.x - maxCamDistance)
    if (cameraX &lt; camMaxX)
    {
        cameraX = camMaxX
    }
}

//The  same
if (cameraY &gt; obj_player_cam.y)
{
    var camMaxY = (obj_player_cam.y + maxCamDistance)
    if (cameraY &gt; camMaxY)
    {
        cameraY = camMaxY
    }
}
else
{
    var camMaxY = (obj_player_cam.y - maxCamDistance)
    if (cameraY &lt; camMaxY)
    {
        cameraY = camMaxY
    }
}

//Soft camera
x = lerp(x, cameraX, camSensitivity);
y = lerp(y, cameraY, camSensitivity);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if keyboard_check(vk_space)
{
    keyboard_check_pressed(vk_space)=isShake
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
